name: prices-pipeline-5min

on:
  schedule:
    - cron: "*/5 * * * *"   # every 5 minutes (UTC)
  workflow_dispatch:
    inputs:
      run_01:
        description: "Run 01_load_prices_live.py?"
        required: false
        default: "true"
      run_02:
        description: "Run 02_append_15m_from_live.py?"
        required: false
        default: "true"
      run_03:
        description: "Run 03_create_hourly_from_15m.py?"
        required: false
        default: "true"
      TOP_N:
        description: "Override TOP_N (optional)"
        required: false
        default: ""
      VERBOSE_MODE:
        description: "Verbose logs for scripts (0/1)"
        required: false
        default: "0"

permissions:
  contents: read

concurrency:
  group: prices-pipeline-5min
  cancel-in-progress: true

jobs:
  run:
    runs-on: ubuntu-latest
    timeout-minutes: 25
    env:
      TZ: UTC
      PYTHONUNBUFFERED: "1"   # stream print() immediately
      PYTHONUTF8: "1"
      PYTHONWARNINGS: default
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"
          cache: "pip"

      - name: Install dependencies
        run: |
          set -euo pipefail
          python -m pip install --upgrade pip
          # Pin driver for stability
          pip install "cassandra-driver==3.29.0" requests python-dotenv tzdata

      - name: Write Astra secure connect bundle
        run: |
          set -euo pipefail
          echo "${{ secrets.ASTRA_BUNDLE_BASE64 }}" | base64 -d > secure-connect.zip
          test -s secure-connect.zip || { echo "secure-connect.zip missing/empty"; exit 1; }
          ls -lh secure-connect.zip

      # Optional: quick tree for debugging paths
      - name: Show workspace tree
        run: |
          pwd
          ls -la
          echo "---- repo root ----"
          ls -la *.py || true

      # 01) Refresh prices_live (robust tmp-swap). Skips internally if data isn't newer.
      - name: 01 load prices_live
        if: ${{ github.event_name != 'workflow_dispatch' || github.event.inputs.run_01 == 'true' }}
        timeout-minutes: 10
        env:
          ASTRA_BUNDLE_PATH: secure-connect.zip
          ASTRA_TOKEN: ${{ secrets.ASTRA_TOKEN }}
          ASTRA_KEYSPACE: ${{ secrets.ASTRA_KEYSPACE }}

          TOP_N: ${{ github.event.inputs.TOP_N != '' && github.event.inputs.TOP_N || secrets.TOP_N || '110' }}
          MIN_EXPECTED: "80"
          RETRIES: "3"
          BACKOFF_MIN: "5"
          REQUEST_TIMEOUT_SEC: "60"
          CONNECT_TIMEOUT_SEC: "15"
          TRUNCATE_ATTEMPTS: "5"
          FETCH_SIZE: "500"
          BATCH_FLUSH_EVERY: "40"
          RUN_FOREVER: "0"
          WAIT_STALE_SEC: "60"
          VERBOSE_MODE: ${{ github.event.inputs.VERBOSE_MODE || '0' }}
        run: |
          set -euo pipefail
          python 01_load_prices_live.py

      # 02) Append 15m slots from live (idempotent via IF NOT EXISTS). Keep it light.
      - name: 02 append 15m from live
        if: ${{ github.event_name != 'workflow_dispatch' || github.event.inputs.run_02 == 'true' }}
        timeout-minutes: 8
        env:
          ASTRA_BUNDLE_PATH: secure-connect.zip
          ASTRA_TOKEN: ${{ secrets.ASTRA_TOKEN }}
          ASTRA_KEYSPACE: ${{ secrets.ASTRA_KEYSPACE }}

          TOP_N: ${{ github.event.inputs.TOP_N != '' && github.event.inputs.TOP_N || secrets.TOP_N || '110' }}
          REQUEST_TIMEOUT_SEC: "60"
          CONNECT_TIMEOUT_SEC: "15"
          FETCH_SIZE: "500"

          # touch only fresh data
          SLOT_DELAY_SEC: "120"
          SLOTS_BACKFILL: "2"   # current + previous slot (~30m total)
          VERBOSE_MODE: ${{ github.event.inputs.VERBOSE_MODE || '0' }}
        run: |
          set -euo pipefail
          python 02_append_15m_from_live.py

      # 03) Hourly candles: finalize previous hour once, roll current partial.
      - name: 03 update hourly from 15m
        if: ${{ github.event_name != 'workflow_dispatch' || github.event.inputs.run_03 == 'true' }}
        timeout-minutes: 8
        env:
          ASTRA_BUNDLE_PATH: secure-connect.zip
          ASTRA_TOKEN: ${{ secrets.ASTRA_TOKEN }}
          ASTRA_KEYSPACE: ${{ secrets.ASTRA_KEYSPACE }}

          TOP_N: ${{ github.event.inputs.TOP_N != '' && github.event.inputs.TOP_N || secrets.TOP_N || '110' }}
          REQUEST_TIMEOUT_SEC: "30"
          CONNECT_TIMEOUT_SEC: "15"
          FETCH_SIZE: "500"

          SLOT_DELAY_SEC: "120"
          CURRENT_ONLY: "1"     # do not backfill older hours
          FINALIZE_PREV: "1"    # finalize previous hour once
          PROGRESS_EVERY: "15"
          VERBOSE_MODE: ${{ github.event.inputs.VERBOSE_MODE || '0' }}
        run: |
          set -euo pipefail
          python 03_create_hourly_from_15m.py
